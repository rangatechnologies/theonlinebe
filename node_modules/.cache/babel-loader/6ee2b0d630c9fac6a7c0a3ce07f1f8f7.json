{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nfunction useIntersectionObserver(elementRef, _ref) {\n  _s();\n\n  let {\n    threshold = 0,\n    root = null,\n    rootMargin = \"0%\",\n    freezeOnceVisible = false\n  } = _ref;\n  const [entry, setEntry] = useState();\n  const frozen = (entry === null || entry === void 0 ? void 0 : entry.isIntersecting) && freezeOnceVisible;\n\n  const updateEntry = _ref2 => {\n    let [entry] = _ref2;\n    setEntry(entry);\n  };\n\n  useEffect(() => {\n    const node = elementRef === null || elementRef === void 0 ? void 0 : elementRef.current; // DOM Ref\n\n    const hasIOSupport = !!window.IntersectionObserver;\n    if (!hasIOSupport || frozen || !node) return;\n    const observerParams = {\n      threshold,\n      root,\n      rootMargin\n    };\n    const observer = new IntersectionObserver(updateEntry, observerParams);\n    observer.observe(node);\n    return () => observer.disconnect(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [elementRef, JSON.stringify(threshold), root, rootMargin, frozen]);\n  return entry;\n}\n\n_s(useIntersectionObserver, \"6ZhD3HOdcA/Uaqeizn934tAx87o=\");\n\nexport default useIntersectionObserver;","map":{"version":3,"names":["useEffect","useState","useIntersectionObserver","elementRef","threshold","root","rootMargin","freezeOnceVisible","entry","setEntry","frozen","isIntersecting","updateEntry","node","current","hasIOSupport","window","IntersectionObserver","observerParams","observer","observe","disconnect","JSON","stringify"],"sources":["/Users/upulrangana/Documents/Ranga Technologies/Website/rangatrading-main/src/hooks/useIntersectionObserver.tsx"],"sourcesContent":["import { RefObject, useEffect, useState } from \"react\";\n\ninterface Args extends IntersectionObserverInit {\n  freezeOnceVisible?: boolean;\n}\n\nfunction useIntersectionObserver(\n  elementRef: RefObject<Element>,\n  {\n    threshold = 0,\n    root = null,\n    rootMargin = \"0%\",\n    freezeOnceVisible = false,\n  }: Args\n): IntersectionObserverEntry | undefined {\n  const [entry, setEntry] = useState<IntersectionObserverEntry>();\n\n  const frozen = entry?.isIntersecting && freezeOnceVisible;\n\n  const updateEntry = ([entry]: IntersectionObserverEntry[]): void => {\n    setEntry(entry);\n  };\n\n  useEffect(() => {\n    const node = elementRef?.current; // DOM Ref\n    const hasIOSupport = !!window.IntersectionObserver;\n\n    if (!hasIOSupport || frozen || !node) return;\n\n    const observerParams = { threshold, root, rootMargin };\n    const observer = new IntersectionObserver(updateEntry, observerParams);\n\n    observer.observe(node);\n\n    return () => observer.disconnect();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [elementRef, JSON.stringify(threshold), root, rootMargin, frozen]);\n\n  return entry;\n}\n\nexport default useIntersectionObserver;\n"],"mappings":";;AAAA,SAAoBA,SAApB,EAA+BC,QAA/B,QAA+C,OAA/C;;AAMA,SAASC,uBAAT,CACEC,UADF,QAQyC;EAAA;;EAAA,IANvC;IACEC,SAAS,GAAG,CADd;IAEEC,IAAI,GAAG,IAFT;IAGEC,UAAU,GAAG,IAHf;IAIEC,iBAAiB,GAAG;EAJtB,CAMuC;EACvC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,EAAlC;EAEA,MAAMS,MAAM,GAAG,CAAAF,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEG,cAAP,KAAyBJ,iBAAxC;;EAEA,MAAMK,WAAW,GAAG,SAAgD;IAAA,IAA/C,CAACJ,KAAD,CAA+C;IAClEC,QAAQ,CAACD,KAAD,CAAR;EACD,CAFD;;EAIAR,SAAS,CAAC,MAAM;IACd,MAAMa,IAAI,GAAGV,UAAH,aAAGA,UAAH,uBAAGA,UAAU,CAAEW,OAAzB,CADc,CACoB;;IAClC,MAAMC,YAAY,GAAG,CAAC,CAACC,MAAM,CAACC,oBAA9B;IAEA,IAAI,CAACF,YAAD,IAAiBL,MAAjB,IAA2B,CAACG,IAAhC,EAAsC;IAEtC,MAAMK,cAAc,GAAG;MAAEd,SAAF;MAAaC,IAAb;MAAmBC;IAAnB,CAAvB;IACA,MAAMa,QAAQ,GAAG,IAAIF,oBAAJ,CAAyBL,WAAzB,EAAsCM,cAAtC,CAAjB;IAEAC,QAAQ,CAACC,OAAT,CAAiBP,IAAjB;IAEA,OAAO,MAAMM,QAAQ,CAACE,UAAT,EAAb,CAXc,CAad;EACD,CAdQ,EAcN,CAAClB,UAAD,EAAamB,IAAI,CAACC,SAAL,CAAenB,SAAf,CAAb,EAAwCC,IAAxC,EAA8CC,UAA9C,EAA0DI,MAA1D,CAdM,CAAT;EAgBA,OAAOF,KAAP;AACD;;GAlCQN,uB;;AAoCT,eAAeA,uBAAf"},"metadata":{},"sourceType":"module"}